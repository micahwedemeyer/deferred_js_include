h2. Deferred Js Include

Allows you to include js files where they're used (like deep inside some partial) but know that they won't actually be written to the DOM until a later point (like in the footer).

Very useful if you do all your javascript unobtrusively and want to load all your javascript files in the footer.


h2. Example

<pre><code><% deferred_js :somefile, :someotherfile %>
...
<% deferred_js :somefile, :yetanotherfile %>
...
<%= include_deferred_js %></code></pre>

This will result in:

<pre><code><script src="/javascripts/somefile.js"></script>
<script src="/javascripts/someotherfile.js"></script>
<script src="/javascripts/yetanotherfile.js"></script></code></pre>

h2. Caching

Passing :cache => true to include_deferred_js will use Rails's built-in javascript caching, but a name will be auto-generated by concatenating all the deferred javascript files. This bypasses the built-in behavior of naming the cached file as 'all.js'

So, using the example from above:

<pre><code><%= include_deferred_js :cache => true %></code></pre>

would result in

<pre><code><script src="/javascripts/somefile_someotherfile_yetanotherfile.js"></script></pre></code>

h2. Notes / Features

* The files will always be included in the order they are passed to deferred_js
* Each file will only be included once
* Options passed to include_deferred_js are passed along to javascript_include_tag as normal, with the exception of cache


Copyright (c) 2010 Micah Wedemeyer, released under the MIT license
